name: CI/CD - ProtecAI Mini

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

env:
  PYTHON_VERSION: "3.12"
  NODE_VERSION: "18"

jobs:
  # Job 1: Testes Backend Python
  backend-tests:
    runs-on: ubuntu-latest
    name: 🐍 Backend Tests & Compliance

    steps:
      - name: 🔄 Checkout do código
        uses: actions/checkout@v4

      - name: 🐍 Setup do Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Cache dependências Python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📦 Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-xdist

      - name: 🧪 Testes de Unidade
        run: |
          pytest tests/test_protecao_eletrica.py -v

      - name: 🧪 Testes de API
        run: |
          pytest tests/test_api_endpoints.py -v

      - name: 🧪 Testes de Compliance
        run: |
          pytest tests/test_dashboard_compliance.py -v

      - name: 🧪 Testes de Severidade
        run: |
          pytest tests/test_severity_logic.py -v

      - name: 🧪 Testes de Cenários
        run: |
          pytest tests/test_scenarios_fixed.py -v

      - name: ✅ Testes Comprehensivos com Cobertura
        run: |
          pytest tests/ \
            --cov=src/backend \
            --cov=infra \
            --cov=simuladores \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-report=html

      - name: 📊 Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: backend
          name: backend-coverage

  # Job 2: Testes Frontend React
  frontend-tests:
    runs-on: ubuntu-latest
    name: ⚛️ Frontend Tests & Build

    steps:
      - name: 🔄 Checkout do código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/frontend/petro-protecai-frontend/package-lock.json

      - name: 📦 Instalar dependências Frontend
        working-directory: src/frontend/petro-protecai-frontend
        run: npm ci

      - name: 🧹 Lint Frontend
        working-directory: src/frontend/petro-protecai-frontend
        run: npm run lint

      - name: 🧪 Testes Frontend
        working-directory: src/frontend/petro-protecai-frontend
        run: npm run test:ci

      - name: 🏗️ Build Frontend
        working-directory: src/frontend/petro-protecai-frontend
        run: npm run build

      - name: 📦 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: src/frontend/petro-protecai-frontend/dist

  # Job 3: Deploy Frontend
  deploy-frontend:
    runs-on: ubuntu-latest
    name: 🌐 Deploy Frontend
    needs: [backend-tests, frontend-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 🔄 Checkout do código
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/frontend/petro-protecai-frontend/package-lock.json

      - name: 📦 Instalar dependências Frontend
        working-directory: src/frontend/petro-protecai-frontend
        run: npm ci

      - name: 🏗️ Build Frontend para Produção
        working-directory: src/frontend/petro-protecai-frontend
        run: |
          npm run build
          echo "Build concluído com sucesso!"

      - name: 🚀 Deploy para GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: src/frontend/petro-protecai-frontend/dist

      - name: ✅ Deploy Concluído
        run: |
          echo "🎉 Frontend deploy concluído com sucesso!"
          echo "📊 Status: ONLINE"
