name: ProtecAI Mini - CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  PYTHON_VERSION: "3.12"
  NODE_VERSION: "18"

jobs:
  # Backend Tests
  backend:
    runs-on: ubuntu-latest
    name: üêç Backend Tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Backend Tests
        run: |
          pytest tests/ -v --tb=short --maxfail=1

  # Frontend Tests
  frontend:
    runs-on: ubuntu-latest
    name: ‚öõÔ∏è Frontend Tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: src/frontend/petro-protecai-frontend/package-lock.json

      - name: Install Frontend Dependencies
        working-directory: src/frontend/petro-protecai-frontend
        run: npm ci

      - name: Run Lint
        working-directory: src/frontend/petro-protecai-frontend
        run: npm run lint

      - name: Build Frontend
        working-directory: src/frontend/petro-protecai-frontend
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: src/frontend/petro-protecai-frontend/dist
          retention-days: 7

  # Deploy (only on main branch)
  deploy:
    runs-on: ubuntu-latest
    name: üöÄ Deploy
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist

      - name: Deployment Success
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "üåê Frontend is now live on GitHub Pages"
